Grade: 0.00/10.00

2 Deduction(s):

--------------
#1: 2.00 points
Failing test: test_advanced: 
        @points=2
        bonus points.
        
Traceback (most recent call last):
  File "../assignments-sol/bonus/bonus_test.py", line 37, in test_advanced
    scores = jaccard_wt(g, 'A')
  File "students/akshaysunku/bonus/bonus.py", line 29, in jaccard_wt
    neighbors = set(g.neighbors(node))
NameError: name 'g' is not defined

source:
    def test_advanced(self):
         """
         @points=2
         bonus points.
         """
         g = nx.Graph([['A', 'B'],
                      ['B', 'C'],
                      ['A', 'D'],
                      ['D', 'E'],
                      ['E', 'F'],
                      ['A', 'F']])
         scores = jaccard_wt(g, 'A')
         self.assertTrue(len(scores) > 0)
         found = False
         res = 0
         for x in scores:
             if x[0] == ('A', 'C'):
                 res = x[1]
                 found = True
         self.assertTrue(found != None)
         self.assertEqual('%.2f' % round(res, 2), '0.75')
--------------

--------------
#2: 8.00 points
Failing test: test_basic: 
        @points=8
        bonus points.
        
Traceback (most recent call last):
  File "../assignments-sol/bonus/bonus_test.py", line 23, in test_basic
    scores = jaccard_wt(g, 'A')
  File "students/akshaysunku/bonus/bonus.py", line 29, in jaccard_wt
    neighbors = set(g.neighbors(node))
NameError: name 'g' is not defined

source:
    def test_basic(self):
         """
         @points=8
         bonus points.
         """
         g = nx.Graph([['A', 'B'],
         			 ['B', 'C'],
         			 ['A', 'D'],
         	         ['D', 'E'],
         	 		 ['E', 'F'],
         			 ['A', 'F']])
         scores = jaccard_wt(g, 'A')
         self.assertTrue(len(scores) > 0)
--------------

